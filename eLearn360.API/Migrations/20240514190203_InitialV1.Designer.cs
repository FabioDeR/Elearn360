// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eLearn360.Data.DBContext;

#nullable disable

namespace eLearn360.API.Migrations
{
    [DbContext(typeof(Elearn360DBContext))]
    [Migration("20240514190203_InitialV1")]
    partial class InitialV1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("eLearn360.Data.Models.Answer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreationTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeleteTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("bit");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<Guid>("QuestionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdateTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("eLearn360.Data.Models.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreationTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeleteTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdateTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d7513e4f-8204-45cc-9715-f117d60f710f"),
                            CreationTrackingUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeleteTrackingUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Education",
                            UpdateTrackingUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("79ddda6d-0cad-46db-8272-a986e2a85593"),
                            CreationTrackingUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeleteTrackingUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Autre",
                            UpdateTrackingUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("eLearn360.Data.Models.Course", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreationTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeleteTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LevelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("PrivateCourse")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdateTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("LevelId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("eLearn360.Data.Models.CourseHasGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreationTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeleteTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdateTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("GroupId");

                    b.ToTable("CourseHasGroups", (string)null);
                });

            modelBuilder.Entity("eLearn360.Data.Models.CourseHasSection", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreationTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeleteTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<Guid>("SectionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdateTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("SectionId");

                    b.ToTable("CourseHasSections", (string)null);
                });

            modelBuilder.Entity("eLearn360.Data.Models.FamilyLink", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreationTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeleteTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdateTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("FamilyLink");
                });

            modelBuilder.Entity("eLearn360.Data.Models.Filial", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreationTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeleteTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdateTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Website")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Filials");
                });

            modelBuilder.Entity("eLearn360.Data.Models.Gender", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Abbreviated")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreationTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeleteTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdateTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Genders");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7a985540-74d1-4231-bf87-b8bede08ca58"),
                            Abbreviated = "Mme.",
                            CreationTrackingUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeleteTrackingUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Femme",
                            UpdateTrackingUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("216e65d3-9b67-4a1b-bb02-81a4b45c4391"),
                            Abbreviated = "M.",
                            CreationTrackingUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeleteTrackingUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Homme",
                            UpdateTrackingUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("32992fa3-ba8b-4f0a-abc4-bdf60a3e1028"),
                            Abbreviated = "X.",
                            CreationTrackingUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeleteTrackingUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Autre",
                            UpdateTrackingUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("eLearn360.Data.Models.Group", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreationTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeleteTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FilialId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdateTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("FilialId");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Groups");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cc5d987d-5d11-4e90-b634-c952e891f4cb"),
                            CreationTrackingUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeleteTrackingUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Public",
                            OrganizationId = new Guid("45338333-202d-47bf-a54c-4a58b945f340"),
                            UpdateTrackingUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("eLearn360.Data.Models.HistoricCourseHasUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreationTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeleteTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdateTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("UserId");

                    b.ToTable("HistoricCourseHasUser", (string)null);
                });

            modelBuilder.Entity("eLearn360.Data.Models.HistoricLessonHasUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreationTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeleteTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LessonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdateTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("LessonId");

                    b.HasIndex("UserId");

                    b.ToTable("HistoricLessonHasUser", (string)null);
                });

            modelBuilder.Entity("eLearn360.Data.Models.HistoricPathWayHasUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreationTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeleteTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PathWayId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdateTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PathWayId");

                    b.HasIndex("UserId");

                    b.ToTable("HistoricPathHasUser", (string)null);
                });

            modelBuilder.Entity("eLearn360.Data.Models.HistoricSectionHasUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreationTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeleteTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("SectionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdateTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SectionId");

                    b.HasIndex("UserId");

                    b.ToTable("HistoricSectionHasUser", (string)null);
                });

            modelBuilder.Entity("eLearn360.Data.Models.Lesson", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreationTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeleteTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("PrivateLesson")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdateTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Lessons");
                });

            modelBuilder.Entity("eLearn360.Data.Models.Level", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreationTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeleteTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdateTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Levels");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b9d7c73a-a1a2-40d1-aad8-bd2cdd5c32ec"),
                            CreationTrackingUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeleteTrackingUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Novice",
                            UpdateTrackingUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("edad484c-9d4e-4f32-921c-6bf97cea79eb"),
                            CreationTrackingUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeleteTrackingUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Confirmé",
                            UpdateTrackingUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("9225acaf-42a8-4405-a6f9-03cc8cd38cfb"),
                            CreationTrackingUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeleteTrackingUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Expert",
                            UpdateTrackingUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("eLearn360.Data.Models.Occupation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreationTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeleteTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("OccupationName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdateTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("7577b83e-ac43-4dbd-94b1-7b3e1ea296ae"),
                            CreationTrackingUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeleteTrackingUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            NormalizedName = "SuperAdmin",
                            OccupationName = "SuperAdmin",
                            UpdateTrackingUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("bf21335a-2a0f-40c0-9936-00254f90510b"),
                            CreationTrackingUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeleteTrackingUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            NormalizedName = "Admin",
                            OccupationName = "Admin",
                            UpdateTrackingUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("a73d6ebf-d83a-41b0-b56f-16b268ab29c8"),
                            CreationTrackingUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeleteTrackingUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            NormalizedName = "Professeur",
                            OccupationName = "Professor",
                            UpdateTrackingUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("c86a20ba-0a68-4220-a436-57e250b11bb4"),
                            CreationTrackingUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeleteTrackingUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            NormalizedName = "Visiteur",
                            OccupationName = "Visitor",
                            UpdateTrackingUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("df29c577-d408-41eb-9d18-30b6dcbe9300"),
                            CreationTrackingUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeleteTrackingUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            NormalizedName = "Étudiant",
                            OccupationName = "Student",
                            UpdateTrackingUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("744132f2-ed00-4ac3-af6a-da857dd19d93"),
                            CreationTrackingUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeleteTrackingUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            NormalizedName = "Tuteur",
                            OccupationName = "Tutor",
                            UpdateTrackingUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("eLearn360.Data.Models.Organization", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Country")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreationTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeleteTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdateTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Website")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ZipCode")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.HasKey("Id");

                    b.ToTable("Organizations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("45338333-202d-47bf-a54c-4a58b945f340"),
                            Address = "Rue de Tubize 40",
                            City = " Ittre",
                            Country = "Be",
                            CreationTrackingUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeleteTrackingUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Email = "contact@educassist.com",
                            ImageUrl = "Bonsoir ceci est un Test",
                            Name = "ASBL Educassist",
                            Phone = "068659787",
                            UpdateTrackingUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            ZipCode = "1460"
                        });
                });

            modelBuilder.Entity("eLearn360.Data.Models.PathWay", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreationTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeleteTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LevelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("PrivatePath")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdateTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("LevelId");

                    b.ToTable("PathWays");
                });

            modelBuilder.Entity("eLearn360.Data.Models.PathWayHasCourse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreationTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeleteTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PathWayId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdateTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("PathWayId");

                    b.ToTable("PathWayHasCourses", (string)null);
                });

            modelBuilder.Entity("eLearn360.Data.Models.PathWayHasGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreationTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeleteTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PathWayId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdateTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("PathWayId");

                    b.ToTable("PathWayHasGroups", (string)null);
                });

            modelBuilder.Entity("eLearn360.Data.Models.Question", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreationTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeleteTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Explanation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LevelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdateTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("LevelId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("eLearn360.Data.Models.QuestionHasCourse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreationTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeleteTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("QuestionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdateTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("QuestionId");

                    b.ToTable("QuestionHasCourse", (string)null);
                });

            modelBuilder.Entity("eLearn360.Data.Models.QuestionHasLesson", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreationTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeleteTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LessonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("QuestionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdateTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("LessonId");

                    b.HasIndex("QuestionId");

                    b.ToTable("QuestionHasLesson", (string)null);
                });

            modelBuilder.Entity("eLearn360.Data.Models.QuestionHasPathWay", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreationTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeleteTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PathWayId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("QuestionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdateTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PathWayId");

                    b.HasIndex("QuestionId");

                    b.ToTable("QuestionHasPathWay", (string)null);
                });

            modelBuilder.Entity("eLearn360.Data.Models.QuestionHasSection", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreationTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeleteTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("QuestionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SectionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdateTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.HasIndex("SectionId");

                    b.ToTable("QuestionHasSection", (string)null);
                });

            modelBuilder.Entity("eLearn360.Data.Models.Quizz", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreationTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeleteTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Rating")
                        .HasColumnType("real");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdateTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Quizzs");
                });

            modelBuilder.Entity("eLearn360.Data.Models.QuizzHasCourse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreationTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeleteTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("QuizzId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdateTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("QuizzId");

                    b.ToTable("QuizzHasCourse", (string)null);
                });

            modelBuilder.Entity("eLearn360.Data.Models.QuizzHasLesson", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreationTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeleteTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LessonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("QuizzId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdateTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("LessonId");

                    b.HasIndex("QuizzId");

                    b.ToTable("QuizzHasLesson", (string)null);
                });

            modelBuilder.Entity("eLearn360.Data.Models.QuizzHasPathWay", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreationTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeleteTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PathWayId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("QuizzId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdateTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PathWayId");

                    b.HasIndex("QuizzId");

                    b.ToTable("QuizzHasPathWay", (string)null);
                });

            modelBuilder.Entity("eLearn360.Data.Models.QuizzHasQuestion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreationTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeleteTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsCorrectAnswer")
                        .HasColumnType("bit");

                    b.Property<Guid>("QuestionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("QuizzId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdateTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.HasIndex("QuizzId");

                    b.ToTable("QuizzHasQuestion", (string)null);
                });

            modelBuilder.Entity("eLearn360.Data.Models.QuizzHasSection", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreationTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeleteTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("QuizzId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SectionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdateTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("QuizzId");

                    b.HasIndex("SectionId");

                    b.ToTable("QuizzHasSection", (string)null);
                });

            modelBuilder.Entity("eLearn360.Data.Models.Section", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreationTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeleteTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("PrivateSection")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdateTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Sections");
                });

            modelBuilder.Entity("eLearn360.Data.Models.SectionHasLesson", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreationTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeleteTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LessonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<Guid>("SectionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdateTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("LessonId");

                    b.HasIndex("SectionId");

                    b.ToTable("SectionHasLessons", (string)null);
                });

            modelBuilder.Entity("eLearn360.Data.Models.StaffHasOccupationHasGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreationTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeleteTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StaffOccupationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdateTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserHasGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("StaffOccupationId");

                    b.HasIndex("UserHasGroupId");

                    b.ToTable("StaffHasOccupationHasGroups", (string)null);
                });

            modelBuilder.Entity("eLearn360.Data.Models.StaffOccupation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreationTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeleteTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdateTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("StaffHasOccupations");
                });

            modelBuilder.Entity("eLearn360.Data.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreationTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeleteTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<Guid>("GenderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LoginMail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdateTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.HasKey("Id");

                    b.HasIndex("GenderId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("f9e2c8ef-189a-49d4-b529-1794e091b95d"),
                            AccessFailedCount = 0,
                            Address = "Rue de Virginal 40",
                            Birthday = new DateTime(2024, 5, 14, 21, 2, 3, 54, DateTimeKind.Local).AddTicks(2731),
                            City = "Virginal",
                            ConcurrencyStamp = "e186463d-5e90-4174-b04f-8ee1240f6bf8",
                            Country = "Be",
                            CreationDate = new DateTime(2024, 5, 14, 21, 2, 3, 54, DateTimeKind.Local).AddTicks(2777),
                            CreationTrackingUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeleteTrackingUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Email = "kjouret@educassist.be",
                            EmailConfirmed = true,
                            FirstName = "Kevin",
                            GenderId = new Guid("216e65d3-9b67-4a1b-bb02-81a4b45c4391"),
                            LastName = "Jouret",
                            LockoutEnabled = true,
                            LoginMail = "kjouret@educassist.be",
                            NormalizedEmail = "KJOURET@EDUCASSIST.BE",
                            NormalizedUserName = "KJOURET@EDUCASSIST.BE",
                            PasswordHash = "AQAAAAIAAYagAAAAEJe2lkmeeFhYYctUIHuiVyynbbZ0owWGlmwu3b+LbgOz2GUpLwn/23izywFpoxDH1w==",
                            Phone = "0202020202",
                            PhoneNumber = "0202020202",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "REMB6AADPUCZ7YLKWCN6MFX3HOMII7WL",
                            TwoFactorEnabled = false,
                            UpdateTrackingUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserName = "kjouret@educassist.be",
                            ZipCode = "1460"
                        });
                });

            modelBuilder.Entity("eLearn360.Data.Models.UserHasFamilyLink", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ChildUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreationTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeleteTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FamilyLinkId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ParentUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdateTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ChildUserId");

                    b.HasIndex("FamilyLinkId");

                    b.HasIndex("ParentUserId");

                    b.ToTable("UserHasFamilyLink");
                });

            modelBuilder.Entity("eLearn360.Data.Models.UserHasGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreationTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeleteTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsHeadTeacher")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdateTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("UserId");

                    b.ToTable("UserHasGroups", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("40736d30-1d1e-497c-a00c-aeb1bba195e5"),
                            CreationTrackingUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeleteTrackingUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EndDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GroupId = new Guid("cc5d987d-5d11-4e90-b634-c952e891f4cb"),
                            IsHeadTeacher = false,
                            StartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdateTrackingUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserId = new Guid("f9e2c8ef-189a-49d4-b529-1794e091b95d")
                        });
                });

            modelBuilder.Entity("eLearn360.Data.Models.UserHasOccupation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreationTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeleteTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OccupationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdateTrackingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("OccupationId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("UserId");

                    b.ToTable("UserHasOccupations", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("d3e4bbfb-e735-4079-bd08-2cb7a789c6e1"),
                            CreationTrackingUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeleteTrackingUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            OccupationId = new Guid("7577b83e-ac43-4dbd-94b1-7b3e1ea296ae"),
                            OrganizationId = new Guid("45338333-202d-47bf-a54c-4a58b945f340"),
                            UpdateTrackingUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserId = new Guid("f9e2c8ef-189a-49d4-b529-1794e091b95d")
                        },
                        new
                        {
                            Id = new Guid("fe4f7134-dce1-4015-9232-c99f8e2a3d27"),
                            CreationTrackingUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeleteTrackingUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            OccupationId = new Guid("bf21335a-2a0f-40c0-9936-00254f90510b"),
                            OrganizationId = new Guid("45338333-202d-47bf-a54c-4a58b945f340"),
                            UpdateTrackingUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserId = new Guid("f9e2c8ef-189a-49d4-b529-1794e091b95d")
                        },
                        new
                        {
                            Id = new Guid("e2595c18-e364-45c9-8f76-75880d7561d3"),
                            CreationTrackingUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeleteTrackingUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            OccupationId = new Guid("a73d6ebf-d83a-41b0-b56f-16b268ab29c8"),
                            OrganizationId = new Guid("45338333-202d-47bf-a54c-4a58b945f340"),
                            UpdateTrackingUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserId = new Guid("f9e2c8ef-189a-49d4-b529-1794e091b95d")
                        },
                        new
                        {
                            Id = new Guid("c576cf88-e017-45f9-993f-4c32fc7bc2c0"),
                            CreationTrackingUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeleteTrackingUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            OccupationId = new Guid("df29c577-d408-41eb-9d18-30b6dcbe9300"),
                            OrganizationId = new Guid("45338333-202d-47bf-a54c-4a58b945f340"),
                            UpdateTrackingUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserId = new Guid("f9e2c8ef-189a-49d4-b529-1794e091b95d")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("OccupationUser", b =>
                {
                    b.Property<Guid>("OccupationsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsersId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("OccupationsId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("OccupationUser");
                });

            modelBuilder.Entity("eLearn360.Data.Models.Answer", b =>
                {
                    b.HasOne("eLearn360.Data.Models.Question", "Question")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("eLearn360.Data.Models.Course", b =>
                {
                    b.HasOne("eLearn360.Data.Models.Category", "Category")
                        .WithMany("Courses")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eLearn360.Data.Models.Level", "Level")
                        .WithMany("Courses")
                        .HasForeignKey("LevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Level");
                });

            modelBuilder.Entity("eLearn360.Data.Models.CourseHasGroup", b =>
                {
                    b.HasOne("eLearn360.Data.Models.Course", "Course")
                        .WithMany("CourseHasGroups")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eLearn360.Data.Models.Group", "Group")
                        .WithMany("CourseHasGroups")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("eLearn360.Data.Models.CourseHasSection", b =>
                {
                    b.HasOne("eLearn360.Data.Models.Course", "Course")
                        .WithMany("CourseHasSections")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eLearn360.Data.Models.Section", "Section")
                        .WithMany("CourseHasSections")
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Section");
                });

            modelBuilder.Entity("eLearn360.Data.Models.Filial", b =>
                {
                    b.HasOne("eLearn360.Data.Models.Organization", "Organization")
                        .WithMany("Filials")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("eLearn360.Data.Models.Group", b =>
                {
                    b.HasOne("eLearn360.Data.Models.Filial", "Filial")
                        .WithMany("Groups")
                        .HasForeignKey("FilialId");

                    b.HasOne("eLearn360.Data.Models.Organization", "Organization")
                        .WithMany("Groups")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Filial");

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("eLearn360.Data.Models.HistoricCourseHasUser", b =>
                {
                    b.HasOne("eLearn360.Data.Models.Course", "Course")
                        .WithMany("HistoricCourseHasUsers")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eLearn360.Data.Models.User", "User")
                        .WithMany("HistoricCourseHasUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("User");
                });

            modelBuilder.Entity("eLearn360.Data.Models.HistoricLessonHasUser", b =>
                {
                    b.HasOne("eLearn360.Data.Models.Lesson", "Lesson")
                        .WithMany("HistoricLessonHasUsers")
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eLearn360.Data.Models.User", "User")
                        .WithMany("HistoricLessonHasUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lesson");

                    b.Navigation("User");
                });

            modelBuilder.Entity("eLearn360.Data.Models.HistoricPathWayHasUser", b =>
                {
                    b.HasOne("eLearn360.Data.Models.PathWay", "PathWay")
                        .WithMany("HistoricPathWayHasUsers")
                        .HasForeignKey("PathWayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eLearn360.Data.Models.User", "User")
                        .WithMany("HistoricPathWayHasUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PathWay");

                    b.Navigation("User");
                });

            modelBuilder.Entity("eLearn360.Data.Models.HistoricSectionHasUser", b =>
                {
                    b.HasOne("eLearn360.Data.Models.Section", "Section")
                        .WithMany("HistoricSectionHasUsers")
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eLearn360.Data.Models.User", "User")
                        .WithMany("HistoricSectionHasUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Section");

                    b.Navigation("User");
                });

            modelBuilder.Entity("eLearn360.Data.Models.PathWay", b =>
                {
                    b.HasOne("eLearn360.Data.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eLearn360.Data.Models.Level", "Level")
                        .WithMany()
                        .HasForeignKey("LevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Level");
                });

            modelBuilder.Entity("eLearn360.Data.Models.PathWayHasCourse", b =>
                {
                    b.HasOne("eLearn360.Data.Models.Course", "Course")
                        .WithMany("PathWayHasCourses")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eLearn360.Data.Models.PathWay", "PathWay")
                        .WithMany("PathWayHasCourses")
                        .HasForeignKey("PathWayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("PathWay");
                });

            modelBuilder.Entity("eLearn360.Data.Models.PathWayHasGroup", b =>
                {
                    b.HasOne("eLearn360.Data.Models.Group", "Group")
                        .WithMany("PathWayHasGroups")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eLearn360.Data.Models.PathWay", "PathWay")
                        .WithMany("PathWayHasGroups")
                        .HasForeignKey("PathWayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("PathWay");
                });

            modelBuilder.Entity("eLearn360.Data.Models.Question", b =>
                {
                    b.HasOne("eLearn360.Data.Models.Level", "Level")
                        .WithMany()
                        .HasForeignKey("LevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Level");
                });

            modelBuilder.Entity("eLearn360.Data.Models.QuestionHasCourse", b =>
                {
                    b.HasOne("eLearn360.Data.Models.Course", "Course")
                        .WithMany("QuestionHasCourses")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eLearn360.Data.Models.Question", "Question")
                        .WithMany("QuestionHasCourses")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("eLearn360.Data.Models.QuestionHasLesson", b =>
                {
                    b.HasOne("eLearn360.Data.Models.Lesson", "Lesson")
                        .WithMany("QuestionHasLessons")
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eLearn360.Data.Models.Question", "Question")
                        .WithMany("QuestionHasLessons")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lesson");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("eLearn360.Data.Models.QuestionHasPathWay", b =>
                {
                    b.HasOne("eLearn360.Data.Models.PathWay", "PathWay")
                        .WithMany("QuestionHasPathWays")
                        .HasForeignKey("PathWayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eLearn360.Data.Models.Question", "Question")
                        .WithMany("QuestionHasPathWays")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PathWay");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("eLearn360.Data.Models.QuestionHasSection", b =>
                {
                    b.HasOne("eLearn360.Data.Models.Question", "Question")
                        .WithMany("QuestionHasSections")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eLearn360.Data.Models.Section", "Section")
                        .WithMany("QuestionHasSections")
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");

                    b.Navigation("Section");
                });

            modelBuilder.Entity("eLearn360.Data.Models.Quizz", b =>
                {
                    b.HasOne("eLearn360.Data.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("eLearn360.Data.Models.QuizzHasCourse", b =>
                {
                    b.HasOne("eLearn360.Data.Models.Course", "Course")
                        .WithMany("QuizzHasCourses")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eLearn360.Data.Models.Quizz", "Quizz")
                        .WithMany("QuizzHasCourses")
                        .HasForeignKey("QuizzId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Quizz");
                });

            modelBuilder.Entity("eLearn360.Data.Models.QuizzHasLesson", b =>
                {
                    b.HasOne("eLearn360.Data.Models.Lesson", "Lesson")
                        .WithMany("QuizzHasLessons")
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eLearn360.Data.Models.Quizz", "Quizz")
                        .WithMany("QuizzHasLessons")
                        .HasForeignKey("QuizzId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lesson");

                    b.Navigation("Quizz");
                });

            modelBuilder.Entity("eLearn360.Data.Models.QuizzHasPathWay", b =>
                {
                    b.HasOne("eLearn360.Data.Models.PathWay", "PathWay")
                        .WithMany("QuizzHasPathWays")
                        .HasForeignKey("PathWayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eLearn360.Data.Models.Quizz", "Quizz")
                        .WithMany("QuizzHasPathWays")
                        .HasForeignKey("QuizzId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PathWay");

                    b.Navigation("Quizz");
                });

            modelBuilder.Entity("eLearn360.Data.Models.QuizzHasQuestion", b =>
                {
                    b.HasOne("eLearn360.Data.Models.Question", "Question")
                        .WithMany("QuizzHasQuestions")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eLearn360.Data.Models.Quizz", "Quizz")
                        .WithMany("QuizzHasQuestions")
                        .HasForeignKey("QuizzId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");

                    b.Navigation("Quizz");
                });

            modelBuilder.Entity("eLearn360.Data.Models.QuizzHasSection", b =>
                {
                    b.HasOne("eLearn360.Data.Models.Quizz", "Quizz")
                        .WithMany("QuizzHasSections")
                        .HasForeignKey("QuizzId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eLearn360.Data.Models.Section", "Section")
                        .WithMany("QuizzHasSections")
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Quizz");

                    b.Navigation("Section");
                });

            modelBuilder.Entity("eLearn360.Data.Models.SectionHasLesson", b =>
                {
                    b.HasOne("eLearn360.Data.Models.Lesson", "Lesson")
                        .WithMany("SectionHasLessons")
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eLearn360.Data.Models.Section", "Section")
                        .WithMany("SectionHasLessons")
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lesson");

                    b.Navigation("Section");
                });

            modelBuilder.Entity("eLearn360.Data.Models.StaffHasOccupationHasGroup", b =>
                {
                    b.HasOne("eLearn360.Data.Models.StaffOccupation", "StaffOccupation")
                        .WithMany("StaffHasOccupationHasGroups")
                        .HasForeignKey("StaffOccupationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eLearn360.Data.Models.UserHasGroup", "UserHasGroup")
                        .WithMany("StaffHasOccupationHasGroups")
                        .HasForeignKey("UserHasGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StaffOccupation");

                    b.Navigation("UserHasGroup");
                });

            modelBuilder.Entity("eLearn360.Data.Models.StaffOccupation", b =>
                {
                    b.HasOne("eLearn360.Data.Models.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("eLearn360.Data.Models.User", b =>
                {
                    b.HasOne("eLearn360.Data.Models.Gender", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gender");
                });

            modelBuilder.Entity("eLearn360.Data.Models.UserHasFamilyLink", b =>
                {
                    b.HasOne("eLearn360.Data.Models.User", "ChildUser")
                        .WithMany()
                        .HasForeignKey("ChildUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eLearn360.Data.Models.FamilyLink", "FamilyLink")
                        .WithMany()
                        .HasForeignKey("FamilyLinkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eLearn360.Data.Models.User", "ParentUser")
                        .WithMany()
                        .HasForeignKey("ParentUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChildUser");

                    b.Navigation("FamilyLink");

                    b.Navigation("ParentUser");
                });

            modelBuilder.Entity("eLearn360.Data.Models.UserHasGroup", b =>
                {
                    b.HasOne("eLearn360.Data.Models.Group", "Group")
                        .WithMany("UserHasGroups")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eLearn360.Data.Models.User", "User")
                        .WithMany("UserHasGroups")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("User");
                });

            modelBuilder.Entity("eLearn360.Data.Models.UserHasOccupation", b =>
                {
                    b.HasOne("eLearn360.Data.Models.Occupation", "Occupation")
                        .WithMany("UserHasOccupations")
                        .HasForeignKey("OccupationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eLearn360.Data.Models.Organization", "Organization")
                        .WithMany("UserHasOccupations")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eLearn360.Data.Models.User", "User")
                        .WithMany("UserHasOccupations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Occupation");

                    b.Navigation("Organization");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("eLearn360.Data.Models.Occupation", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("eLearn360.Data.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("eLearn360.Data.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("eLearn360.Data.Models.Occupation", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eLearn360.Data.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("eLearn360.Data.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OccupationUser", b =>
                {
                    b.HasOne("eLearn360.Data.Models.Occupation", null)
                        .WithMany()
                        .HasForeignKey("OccupationsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eLearn360.Data.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eLearn360.Data.Models.Category", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("eLearn360.Data.Models.Course", b =>
                {
                    b.Navigation("CourseHasGroups");

                    b.Navigation("CourseHasSections");

                    b.Navigation("HistoricCourseHasUsers");

                    b.Navigation("PathWayHasCourses");

                    b.Navigation("QuestionHasCourses");

                    b.Navigation("QuizzHasCourses");
                });

            modelBuilder.Entity("eLearn360.Data.Models.Filial", b =>
                {
                    b.Navigation("Groups");
                });

            modelBuilder.Entity("eLearn360.Data.Models.Group", b =>
                {
                    b.Navigation("CourseHasGroups");

                    b.Navigation("PathWayHasGroups");

                    b.Navigation("UserHasGroups");
                });

            modelBuilder.Entity("eLearn360.Data.Models.Lesson", b =>
                {
                    b.Navigation("HistoricLessonHasUsers");

                    b.Navigation("QuestionHasLessons");

                    b.Navigation("QuizzHasLessons");

                    b.Navigation("SectionHasLessons");
                });

            modelBuilder.Entity("eLearn360.Data.Models.Level", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("eLearn360.Data.Models.Occupation", b =>
                {
                    b.Navigation("UserHasOccupations");
                });

            modelBuilder.Entity("eLearn360.Data.Models.Organization", b =>
                {
                    b.Navigation("Filials");

                    b.Navigation("Groups");

                    b.Navigation("UserHasOccupations");
                });

            modelBuilder.Entity("eLearn360.Data.Models.PathWay", b =>
                {
                    b.Navigation("HistoricPathWayHasUsers");

                    b.Navigation("PathWayHasCourses");

                    b.Navigation("PathWayHasGroups");

                    b.Navigation("QuestionHasPathWays");

                    b.Navigation("QuizzHasPathWays");
                });

            modelBuilder.Entity("eLearn360.Data.Models.Question", b =>
                {
                    b.Navigation("Answers");

                    b.Navigation("QuestionHasCourses");

                    b.Navigation("QuestionHasLessons");

                    b.Navigation("QuestionHasPathWays");

                    b.Navigation("QuestionHasSections");

                    b.Navigation("QuizzHasQuestions");
                });

            modelBuilder.Entity("eLearn360.Data.Models.Quizz", b =>
                {
                    b.Navigation("QuizzHasCourses");

                    b.Navigation("QuizzHasLessons");

                    b.Navigation("QuizzHasPathWays");

                    b.Navigation("QuizzHasQuestions");

                    b.Navigation("QuizzHasSections");
                });

            modelBuilder.Entity("eLearn360.Data.Models.Section", b =>
                {
                    b.Navigation("CourseHasSections");

                    b.Navigation("HistoricSectionHasUsers");

                    b.Navigation("QuestionHasSections");

                    b.Navigation("QuizzHasSections");

                    b.Navigation("SectionHasLessons");
                });

            modelBuilder.Entity("eLearn360.Data.Models.StaffOccupation", b =>
                {
                    b.Navigation("StaffHasOccupationHasGroups");
                });

            modelBuilder.Entity("eLearn360.Data.Models.User", b =>
                {
                    b.Navigation("HistoricCourseHasUsers");

                    b.Navigation("HistoricLessonHasUsers");

                    b.Navigation("HistoricPathWayHasUsers");

                    b.Navigation("HistoricSectionHasUsers");

                    b.Navigation("UserHasGroups");

                    b.Navigation("UserHasOccupations");
                });

            modelBuilder.Entity("eLearn360.Data.Models.UserHasGroup", b =>
                {
                    b.Navigation("StaffHasOccupationHasGroups");
                });
#pragma warning restore 612, 618
        }
    }
}
